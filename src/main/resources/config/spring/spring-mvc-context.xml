<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd 
      	http://www.springframework.org/schema/aop 
       	http://www.springframework.org/schema/aop/spring-aop.xsd 
	   	http://www.springframework.org/schema/context 
	   	http://www.springframework.org/schema/context/spring-context.xsd 
	   	http://www.springframework.org/schema/mvc 
	  	http://www.springframework.org/schema/mvc/spring-mvc.xsd" default-autowire="byName">

	<bean class="com.kidd.base.common.utils.ServiceProvider" scope="singleton"/>
	
	<bean id="propertyConfigurer" class="com.kidd.base.common.utils.KiddInitConfigurer">
		<property name="locations">
			<list>
				<!-- 配置 -->
				<value>classpath:prop/kidd.properties</value>
			</list>
		</property>
	</bean>
	
    <!-- 启用spring 注解 -->
	<context:annotation-config />
	
	<!-- 图片上传 
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	-->
	
    <!-- 配置静态资源 -->
    <mvc:resources location="/static/" mapping="/static/**" />
	<!-- 对web包中的所有类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
	<context:component-scan base-package="com.kidd.db,com.kidd.base.factory,com.kidd.wap.controller,com.kidd.view.controller"/>
	<!-- 对包进行扫描，实现注释驱动Bean定义，同时将bean自动注入容器中使用。即解决了@Controller标识的类的bean的注入和使用。 -->
	
    <!--配置Spring MVC RequestMappingHandlerMapping -->
	<mvc:annotation-driven>
		<!-- RequestMappingHandlerAdapter.customArgumentResolvers -->
		<mvc:argument-resolvers>
			<bean class="com.kidd.base.spring.redefine.KiddSpringWebArgumentResolver" />
		</mvc:argument-resolvers>
		<!-- AnnotationDrivenBeanDefinitionParser默认加载StringHttpMessageConverter、MappingJacksonHttpMessageConverter等， 
			RequestMappingHandlerAdapter.messageConverters -->
		<mvc:message-converters>
			<bean class="com.kidd.base.spring.redefine.KiddObjHttpMsgConvert" />
		</mvc:message-converters>
	</mvc:annotation-driven>
    
     <!-- configure SimpleMappingExceptionResolver -->
	<bean class="com.kidd.base.spring.redefine.KiddSpringExceptionResolver">
		<!-- 指定所有没有指定的异常,都跳转到该页面 -->
        <property name="defaultErrorView" value="tips" />
        <!-- 跳转时携带异常对象 -->
        <property name="exceptionAttribute" value="ex"></property>
        
        <!-- <property name="exceptionMappings">
             <props>
                 <prop key="java.lang.Exception">user/tips</prop>
                 <prop key="java.lang.Throwable">user/tips</prop>
             </props>
         </property>
         <property name="statusCodes">
             <props>
                 <prop key="user/tips">500</prop>
                 <prop key="user/tips">404</prop>
             </props>
         </property>
         设置日志输出级别，不定义则默认不输出警告等错误日志信息
         <property name="warnLogCategory" value="WARN"></property>
         默认错误页面，当找不到上面mappings中指定的异常对应视图时，使用本默认配置
         <property name="defaultErrorView" value="user/tips"></property>
         默认HTTP状态码
         <property name="defaultStatusCode" value="500"></property> -->
	</bean>

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/wap/**" />
			<bean class="com.kidd.base.spring.interceptor.KiddCompatibleInterceptor" />
		</mvc:interceptor>
		<!-- <mvc:interceptor> <mvc:mapping path="/nocard*/**"/> <bean class="com.micro.wap.interceptor.MicroNoCardPermissionInterceptor"/> 
			</mvc:interceptor> -->
	</mvc:interceptors>
    
    
    <!-- thymeleaf 模板引擎  start-->
    <bean id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
        <property name="prefix" value="/WEB-INF/pages/" />
        <property name="suffix" value=".html" />
        <property name="templateMode" value="HTML5" />
        <property name="characterEncoding" value="UTF-8"/>
        <property name="cacheable" value="false" />
    </bean>
    <bean id="templateEngine" class="org.thymeleaf.spring4.SpringTemplateEngine">
        <property name="templateResolver" ref="templateResolver" />
    </bean>
    <bean class="org.thymeleaf.spring4.view.ThymeleafViewResolver">
        <property name="templateEngine" ref="templateEngine" />
        <property name="characterEncoding" value="UTF-8"/>
    </bean>
 	<!-- thymeleaf 模板引擎  end-->
 
 	<!-- 定时刷新  -->
 	<bean class="com.kidd.base.factory.cache.SpringContextListener"/>
 
</beans>